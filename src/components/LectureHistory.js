import React, { useState, useEffect } from 'react';
import { getUserLectures, deleteLecture } from '../services/api.js';

const LectureHistory = ({ token, onSelectLecture, onClose }) => {
  const [lectures, setLectures] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    loadLectures();
  }, [token]);

  const loadLectures = async () => {
    try {
      setLoading(true);
      const response = await getUserLectures(token);
      setLectures(response.data);
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  const handleDeleteLecture = async (lectureId) => {
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) return;

    try {
      await deleteLecture(lectureId, token);
      setLectures(lectures.filter(lecture => lecture.id !== lectureId));
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU');
  };

  if (loading) {
    return (
      <div className="lecture-history-overlay">
        <div className="lecture-history-modal">
          <div className="loading-spinner">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="lecture-history-overlay">
      <div className="lecture-history-modal">
        <div className="history-header">
          <h2>üìö –ò—Å—Ç–æ—Ä–∏—è –ª–µ–∫—Ü–∏–π</h2>
          <button onClick={onClose} className="close-btn">‚úï</button>
        </div>

        {error && <div className="error-message">{error}</div>}

        <div className="lectures-list">
          {lectures.length === 0 ? (
            <div className="empty-history">
              <div className="empty-icon">üìù</div>
              <h3>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</h3>
              <p>–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –≤—Å–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Ç–µ–∫—Å—Ç—ã</p>
            </div>
          ) : (
            lectures.map(lecture => (
              <div key={lecture.id} className="lecture-card">
                <div className="lecture-header">
                  <h4>{lecture.title}</h4>
                  <span className="lecture-date">
                    {formatDate(lecture.createdAt)}
                  </span>
                </div>
                
                <div className="lecture-preview">
                  {lecture.summary.substring(0, 150)}...
                </div>

                <div className="lecture-actions">
                  <button 
                    onClick={() => onSelectLecture(lecture)}
                    className="action-btn view-btn"
                  >
                    üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                  </button>
                  <button 
                    onClick={() => handleDeleteLecture(lecture.id)}
                    className="action-btn delete-btn"
                  >
                    üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              </div>
            ))
          )}
        </div>
      </div>
    </div>
  );
};

export default LectureHistory;