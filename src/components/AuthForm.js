import React, { useState } from 'react';
import { loginUser, registerUser } from '../services/api.js';

const AuthForm = ({ onLogin }) => {
  const [isLogin, setIsLogin] = useState(true);
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    name: ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    if (error) setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      let result; // ‚Üê –ò–ó–ú–ï–ù–ò–õ–ò –ù–ê result
      if (isLogin) {
        result = await loginUser(formData);
      } else {
        result = await registerUser(formData);
      }
      
      console.log('API Response:', result);
      console.log('User data:', result.data.user); 
      
      onLogin(result.data); 
    } catch (err) {
      console.error('Auth error:', err);
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'); 
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="auth-container">
      <div className="auth-form fade-in">
        <h2>{isLogin ? 'üîê –í—Ö–æ–¥' : 'üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}</h2>
        
        {error && <div className="error-message">{error}</div>}
        
        <form onSubmit={handleSubmit}>
          {!isLogin && (
            <div className="form-group">
              <label>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                required
                disabled={loading}
              />
            </div>
          )}
          
          <div className="form-group">
            <label>Email –∞–¥—Ä–µ—Å:</label>
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              placeholder="your@email.com"
              required
              disabled={loading}
            />
          </div>
          
          <div className="form-group">
            <label>–ü–∞—Ä–æ–ª—å:</label>
            <input
              type="password"
              name="password"
              value={formData.password}
              onChange={handleChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              required
              minLength="6"
              disabled={loading}
            />
          </div>
          
          <button type="submit" disabled={loading}>
            {loading ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : (isLogin ? '–í–æ–π—Ç–∏' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç')}
          </button>
        </form>
        
        <p style={{ textAlign: 'center', marginTop: '1.5rem' }}>
          {isLogin ? '–ï—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? ' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? '}
          <span 
            className="toggle-link" 
            onClick={() => {
              if (!loading) {
                setIsLogin(!isLogin);
                setError('');
              }
            }}
          >
            {isLogin ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–í–æ–π—Ç–∏'}
          </span>
        </p>
      </div>
    </div>
  );
};

export default AuthForm;